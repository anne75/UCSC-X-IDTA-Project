head(cia.ship[,c(1,3)],10)
casualty%.%group_by(year(date))%.%summarise(nb=n())
casualty%.%group_by("year"=year(date))%.%summarise(nb=n())
cut(casualty$DOB, quantile)
cut(casualty$DOB, quantile())
cut(casualty$DOB, quantile(casualty$DOB,))
cut(casualty$DOB, quantile(casualty$DOB,), na.rm=T)
cut(casualty$DOB, quantile(casualty$DOB, na.rm=T))
cut(casualty$DOB, quantile(casualty$DOB[casualty$DOB>=1800 & casualty$DOB<2010], na.rm=T))
casualty$DOBCut<-cut(casualty$DOB, quantile(casualty$DOB[casualty$DOB>=1800 & casualty$DOB<2010], na.rm=T))
levels(casualty$DOBCut)<-c("1st", "2nd","3rd","4th")
head(casualty$DOBCut)
table(casualty$category[casualty$DOBCut=="1st"])
table(casualty$category)
table(casualty$casType[casualty$DOBCut=="1st"])
table(casualty$casLife[casualty$DOBCut=="1st"])
ser.table<-table(casualty$casLife)
ser.df<-data.frame(ser.table,"Percentage"=round(flag.table/sum(flag.table)*100,2))
ser.df
ser.df<-data.frame(ser.table,"Percentage"=round(ser.table/sum(ser.table)*100,2))
ser.df
str(ser.df)
ser.df<-data.frame(ser.table,"Percentage"=round(ser.table/sum(ser.table)*100,2))[,-3]
str(ser.df)
names(ser.df)<-c("seriousness","count","percentage")
ser.df
table(casualty$casLife[casualty$shipType=="GENERAL CARGO SHIP"])
table(casualty$casLife[casualty$shipType=="TUG"])
table(casualty$casLife[casualty$shipType=="RO-RO CARGO SHIP"])
6/14
6/20
length(unique(cia.ship$flagState))
head(cia.ship[,c(1,3)],10)
casualty%.%group_by("year"=year(date))%.%summarise(nb=n())
max(casualty$fatalities)
casualty[casualty$fatalities==max(casualty$fatalities, na.rm=T),]`
)
`
casualty[casualty$fatalities==max(casualty$fatalities, na.rm=T),]
casualty[casualty$fatalities==which.max(casualty$fatalities, na.rm=T),]
casualty[casualty$fatalities==which.max(casualty$fatalities),]
casualty[which.max(casualty$fatalities),]
casualty[which.max(casualty$fatalities),2:12]
world.fleet<-read.table("worldfleet2005.txt", sep=";",stringsAsFactors=F, header=T,colClasses=
c("character","numeric","NULL"))
world.fleet$percentage<-round(world.fleet$Total/sum(world.fleet$Total)*100,2)
world.fleet[order(world.fleet$frequency, decreasing=T),c(1,3)]
order(world.fleet$frequency, decreasing=T)
world.fleet[order(world.fleet$percentage, decreasing=T),c(1,3)]
table(casualty$category[casualty$shipType=="GENERAL CARGO SHIP"])
head(table(casualty$category[casualty$shipType=="GENERAL CARGO SHIP"]))
head(sort(table(casualty$category[casualty$shipType=="GENERAL CARGO SHIP"]), decresaing=T),3)
head(sort(table(casualty$category[casualty$shipType=="GENERAL CARGO SHIP"]), decreasing=T),3)`
`
head(sort(table(casualty$category[casualty$shipType=="GENERAL CARGO SHIP"]), decreasing=T),3)
ggplot(casualty, aes(x=casLife, fill=category))+geom_bar(stat="bin") + #pour destack ,position="dodge"
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
strip.text.x = element_text(angle = 90, size=0.5)) +
labs(x="seriousness of accident", fill="casualty") +
facet_grid(.~casType, scales="free", space="free")
ggplot(casualty, aes(x=casLife, fill=category))+geom_bar(stat="bin") + #pour destack ,position="dodge"
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
strip.text.x = element_text(angle = 90, size=1)) +
labs(x="seriousness of accident", fill="casualty") +
facet_grid(.~casType, scales="free", space="free")
ggplot(casualty, aes(x=casLife, fill=category))+geom_bar(stat="bin") + #pour destack ,position="dodge"
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
strip.text.x = element_text(angle = 90)) +
labs(x="seriousness of accident", fill="casualty") +
facet_grid(.~casType, scales="free", space="free")
table(casualty$casType)
str(shipAcc)
casualty2<-do.call(rbind, shipAcc)
str(casualty2)
table(casualty$V12)
table(casualty2$V12)
cleantype<-function(x) {
bkdnwithshore<-grepl("^B(.*)", x) & !grepl("^B(.*)g", x)
x[bkdnwithshore]<-"Breakdown with shore assistance"
x[grepl("^C(.*)", x)]<-"Constructive total loss"
x<-gsub(" \\(.*\\)","",x)
x[grepl("[Hh]ull", x)]<-"Structural damage"
x[grepl("Tot(.*)lif(.*)*",x)]<-"Total loss and loss of life"
x[grepl("Tot(.*)shi(.*)*",x)]<-"Total loss"
return(x)
}
casualty2$V12<-cleantype(casualty2$V12)
table(casualty2$V12)
summary(table(casualty$casType, casualty$casLife))$statistic
summary(table(casualty$casType, casualty$casLife))$p.value
getwd()
setwd("~/projet IDTA/UCSC-X-IDTA-Project")
setwd("/home/anne/projet IDTA")
i<-1
list.files()
getwd()
shipPos<-list()
i<-1
fileExtension<-c("A", "E", "O","S","Y","I")
load3<-function(file) {
tempFile<-read.table(file, sep="\t", quote="",fill=T, header=T, stringsAsFactors=F)
tempFile<-tempFile[-which(tempFile$position==""),-c(4,5)]
return(tempFile)
}
for (letter in fileExtension) {
myfile<-paste0("ship",letter)
myzip<-paste0(myfile,".zip")
mytxt<-paste0(myfile,".txt")
shipPos[[i]]<-load3(unz(myzip, mytxt))
i<-i+1
}
AA<-do.call(rbind, shipPos)
setwd("~/projet IDTA")
rm(list=ls())
list.files()
shipPos<-list()
i<-1
setwd("~/projet IDTA/UCSC-X-IDTA-Project")
setwd("~/projet IDTA")
list.files()
setwd("~/projet IDTA/UCSC-X-IDTA-Project")
list.files()
shipPos<-list()
i<-1
fileExtension<-c("A", "E", "O","S","Y","I")
load3<-function(file) {
tempFile<-read.table(file, sep="\t", quote="",fill=T, header=T, stringsAsFactors=F)
tempFile<-tempFile[-which(tempFile$position==""),-c(4,5)]
return(tempFile)
}
for (letter in fileExtension) {
myfile<-paste0("../ship",letter)
myzip<-paste0(myfile,".zip")
mytxt<-paste0(myfile,".txt")
shipPos[[i]]<-load3(unz(myzip, mytxt))
i<-i+1
}
AA<-do.call(rbind, shipPos)
unz(myzip, mytxt)
close()
shipPos<-list()
i<-1
fileExtension<-c("A", "E", "O","S","Y","I")
load3<-function(file) {
tempFile<-read.table(file, sep="\t", quote="",fill=T, header=T, stringsAsFactors=F)
tempFile<-tempFile[-which(tempFile$position==""),-c(4,5)]
return(tempFile)
}
for (letter in fileExtension) {
myfile<-paste0("ship",letter)
myzip<-paste0("../",myfile,".zip")
mytxt<-paste0(myfile,".txt")
shipPos[[i]]<-load3(unz(myzip, mytxt))
i<-i+1
}
AA<-do.call(rbind, shipPos)
AA2<-unique(AA)
casualty[casualty$fatalities>0 &!is.na(casualty$fatalities),]%.%group_by("year"=year(date))%.%summarise(nb=n(),nbFatlities=sum(fatalities))
library("ggplot2")
library("ggmap")
library("mapdata")
library("lubridate")
library("dplyr")
shipPos<-list()
i<-1
fileExtension<-c("A", "E", "O","S","Y","I")
load3<-function(file) {
tempFile<-read.table(file, sep="\t", quote="",fill=T, header=T, stringsAsFactors=F)
tempFile<-tempFile[-which(tempFile$position==""),-c(4,5)]
return(tempFile)
}
for (letter in fileExtension) {
myfile<-paste0("ship",letter)
myzip<-paste0("../",myfile,".zip")
mytxt<-paste0(myfile,".txt")
shipPos[[i]]<-load3(unz(myzip, mytxt))
i<-i+1
}
AA<-do.call(rbind, shipPos)
AA2<-unique(AA) #184 000 unique positions, a dataframe
#### Cleaning
latlg<-do.call(rbind,strsplit(AA2$position, ", "))
f<-function(x) gsub("'","",x)
latlg2<-apply(latlg,c(1,2),FUN=f)
f2<-function(x) strsplit(x,"[ \\Â°]")
library("plyr")
lat<-ldply(sapply(latlg2[,1],FUN=f2))
lg<-ldply(sapply(latlg2[,2],FUN=f2))
lat<-lat[,-1]
lg<-lg[,-1]
convert<-function(x) {
y<-as.numeric(x[,2])+as.numeric(x[,3])/60
y<-ifelse ((x[,1]=="S")|(x[,1]=="W"), -y,y)
}
L<-convert(lat)
LL<-convert(lg)
position<-data.frame("lat"=L,"long"=LL)
shipAcc<-list()
i<-1
fileExtension<-c("1998", "1999", "2000","2001","2002","2003")
cC<-c(NA, "character","NULL",rep("character",6),rep("NULL",2), "character", "NULL",
"character", "numeric", "character", "NULL")
for (letter in fileExtension) {
myfile<-paste0("../casualty",letter,"clean.csv")
shipAcc[[i]]<-read.csv(myfile, stringsAsFactors=F, colClasses=cC, header=F)
i<-i+1
}
casualty<-do.call(rbind, shipAcc)
names(casualty)<-c("dataSource", "flagState", "date", "casLife",
"lat", "long", "fatalities", "injuries", "casType", "shipType", "DOB", "category")
#### Cleaning, in feature order
#data source
#flagState
cleanflag<-function(x) {
x<-toupper(x)
x[grepl("^CHINA", x)]<-"CHINA"
x[grepl("^MARSHALL", x)]<-"MARSHALL ISLANDS"
x<-gsub("KINGDON","KINGDOM",x)
x<-gsub("S REP$"," REPUBLIC OF",x)
x<-gsub(" BARGUDA", " BARBUDA",x)
x<-gsub("VIET NAM","VIETNAM", x)
x<-gsub("&","AND", x)
x<-gsub("NETHERLANDS,","NETHERLANDS", x)
return(x)
}
casualty$flagState<-cleanflag(casualty$flagState)
#date
dateclean<-function(x) {
temp<-dmy(x)
f3<-function(x) ifelse(x<2000, x+1900, x)
year(temp)<-sapply(year(temp),f3)
return(temp)
}
casualty$date<-dateclean(casualty$date)
#casLife (was someone injured or killed)
temp1<-gsub(" \\(.*\\)","",casualty$casLife)
temp1<-gsub("Casualty","Serious casualty", temp1)
#je ne distingue pas ou a eu lieu le drame, c'est l'accident qui compte
#reste un Casualty tout seul
casualty$casLife<-as.factor(temp1)
#lat and long
fmin<-function(x, pattern) {
y<-ifelse(grepl(pattern,x),regmatches(x,regexec(pattern,x)), "0")
}
library(plyr)
convert2<-function(x) {
l1<-do.call(rbind,strsplit(x,"o"))
l2<-ldply(sapply(l1[,2], fmin, "^[0-9]+"))[,2] #I need only the values, not any name
l3<-ldply(sapply(l1[,2], fmin, "\\.[0-9]+"))[,2]
l4<-ldply(sapply(l1[,2], fmin, "[A-Z]"))[,2]
l5<-as.numeric(l1[,1])+as.numeric(l2)/60+as.numeric(l3)
l5<-ifelse ((l4=="S")|(l4=="W"), -l5,l5)
return(l5)
}
casualty$lat<-convert2(casualty$lat)
casualty$long<-convert2(casualty$long)
#fatalities and injuries
casualty$fatalities<-as.numeric(casualty$fatalities)
casualty$injuries<-as.numeric(casualty$injuries)
#casType
cleantype<-function(x) {
bkdnwithshore<-grepl("^B(.*)", x) & !grepl("^B(.*)g", x)
x[bkdnwithshore]<-"Breakdown with shore assistance"
x[grepl("^C(.*)", x)]<-"Constructive total loss"
x<-gsub(" \\(.*\\)","",x)
x[grepl("[Hh]ull", x)]<-"Structural damage"
x[grepl("Tot(.*)lif(.*)*",x)]<-"Total loss and loss of life"
x[grepl("Tot(.*)shi(.*)*",x)]<-"Total loss"
return(x)
}
casualty$casType<-cleantype(casualty$casType)
#shipType
cleanship<-function(x) {
x<-toupper(x)
x[grepl("BA(.*)",x)]<-"BARGE"
x[grepl("BULK",x)]<-"BULK CARRIER"
x[grepl("FISH",x)]<-"FISH RELATED SHIP"
x[grepl("GAS ",x)]<-"GAS CARRIER"
x[grepl("ICE(.*) ",x)]<-"ICEBREAKER"
x[grepl("^RO(.*)",x)]<-"RO-RO CARGO SHIP"
x[grepl("^TA(.*) ",x)]<-"TANKER"
x[grepl("TUG",x)]<-"TUG"
x[grepl("^VEH(.*)",x)]<-"VEHICLES CARRIER"
return(x)
}
casualty$shipType<-cleanship(casualty$shipType)
#shipYear
#category
cleancat<-function(x){
x[grepl("^Cap(.*)",x)]<-"Capsize"
x[grepl("Fail(.*)",x)]<-"Hull failure"
x[grepl("Fire and explosion",x)]<-"Fire/Explosion"
grounding<-grepl("Groun(.*)",x) | grepl("Stra(.*)",x)
x[grounding]<-"Grounding"
x[grepl("Other(/|$)",x)]<-"Unknown"
x[grepl("Work",x)]<-"Work-related accident"
x[grepl("Fall",x)]<-"Fall overboard"
return(x)
}
casualty$category<-cleancat(casualty$category)
rm(AA,AA2,lat,latlg,latlg2,lg, L,LL,cC,fileExtension,i,letter,myfile,mytxt,myzip,temp1)
world_map <- borders("worldHires", colour="#99FF99" ,fill="#99FF99") # create a layer of borders
mp <- ggplot(position, aes(x=long, y=lat)) + world_map
mp<-mp + stat_density2d(aes(fill = ..level..), geom="polygon") +
scale_fill_gradient(low="#9999CC", high="#663399",name ="ship density") +
geom_point(data= casualty, aes(x=long, y=lat, color=as.factor(casLife)), size=1) +
scale_color_manual(values=c("#FF9900","#330000")) +
labs( x="longitude", y="latitude", color="casualty")
mp
range(position$lat)
range(position$long)
fzone<-function(df,lat1,lat2,long1,long2=-long1) {
cond<-with(df,(lat>lat1 & lat <lat2)&(long>long1 & long<long2))
df2<-df[with(df,cond),]
return(df2)
}
eur_pos<-fzone(position,47,58,-15,15)
eur_cas<-fzone(casualty,47,58,-15,15)
mp_eur <- ggplot(eur_pos, aes(x=long, y=lat)) + world_map + coord_cartesian(
xlim=c(-15,15),ylim=c(47,58))
mp_eur + geom_point(color="#9999CC",size=1.7) +
geom_point(data= eur_cas, aes(x=long, y=lat, color=as.factor(casLife)), size=1.3) +
scale_color_manual(values=c("#FF9900","#330000")) +
labs( x="longitude", y="latitude", color="casualty")
asi_cas<-fzone(casualty,17,38,110,139)
nrow(eur_cas)
nrow(asi_cas)
round(2014-mean(eur_cas$DOB[eur_cas$DOB>=1850 & eur_cas$DOB<=2020], na.rm=T))
round(2014-mean(asi_cas$DOB[asi_cas$DOB>=1850 & asi_cas$DOB<=2020], na.rm=T))
ggplot()+
scale_fill_manual(values=c("#FF000033","#0000FF33"), name="Area",labels=c("China Coast","Europe")) +
geom_bar(data=eur_cas, aes(x=casType, fill="Europe"),stat="bin") + #pour destack ,position="dodge"
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(x="type of casualty") +
geom_bar(data=asi_cas,aes(x=casType, fill="China Coast"),stat="bin")
position$latCut<-cut(position$lat,breaks = seq(-90,90,length.out=11))
position$longCut<-cut(position$long,breaks = seq(-180,180,length.out=21))
poscut<-position%.%group_by(latCut, longCut)%.%summarise(position=n())
casualty$latCut<-cut(casualty$lat,breaks = seq(-90,90,length.out=11))
casualty$longCut<-cut(casualty$long,breaks = seq(-180,180,length.out=21))
cascut<-casualty%.%group_by(latCut, longCut)%.%summarise(casualty=n())
heat<-merge(poscut,cascut)
heat$density<-heat$casualty/heat$position
ggplot(data=heat, aes(x=longCut, y=latCut, fill=density))+geom_tile() +
scale_fill_gradient(low="#9999CC", high="#663399",name ="density") +
labs(x="longitudinal cuts", y="latitude cuts", title="Casualties Heatmap")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
rs_cas<-casualty[casualty$latCut=="(0,18]" & casualty$longCut=="(36,54]",]
table(rs_cas$casType)
ser.table<-table(casualty$casLife)
ser.df<-data.frame(ser.table,"Percentage"=round(ser.table/sum(ser.table)*100,2))[,-3]
names(ser.df)<-c("seriousness","count","percentage")
ser.df
length(unique(casualty$flagState))
flag.table<-sort(table(casualty$flagState), decreasing=T)
flag.freq<-data.frame("casualtyPercentage"=round(flag.table/sum(flag.table)*100,2))
head(flag.freq,10)
cia.ship<-read.table("../ciaship.txt", sep="\t", stringsAsFactors=F)
cia.ship<-cia.ship[,-1]
names(cia.ship)<-c("flagState", "merchantMarine")
cia.ship$flagState<-toupper(cia.ship$flagState)
cia.ship$merchantMarine<-as.numeric(gsub(",","",cia.ship$merchantMarine))
cia.ship$fleetPercentage<-round(cia.ship$merchantMarine/sum(cia.ship$merchantMarine)*100,2)
length(unique(cia.ship$flagState))
head(cia.ship[,c(1,3)],10)
casualty%.%group_by("year"=year(date))%.%summarise(nb=n())
casualty%.%group_by("year"=year(date))%.%summarise(nbFatlities=sum(fatalities, na.rm=T),nbInjured=sum(injuries, na.rm=T))
casualty[casualty$fatalities>0 &!is.na(casualty$fatalities),]%.%group_by("year"=year(date))%.%summarise(nb=n(),nbFatlities=sum(fatalities))
casualty%.%group_by("year"=year(date))%.%summarise(nbFatlities=sum(fatalities, na.rm=T),
nbInjured=sum(injuries, na.rm=T))
casualty[casualty$fatalities>0 &!is.na(casualty$fatalities),]%.%group_by("year"=year(date))%.%summarise(nb=n(),nbFatlities=sum(fatalities))
casualty[casualty$fatalities>0 &!is.na(casualty$fatalities),]%.%group_by("year"=year(
date))%.%summarise(nb=n(),nbFatlities=sum(fatalities))
casualty[which.max(casualty$fatalities),2:12]
ship.table<-sort(table(casualty$shipType), decreasing=T)
ship.freq<-data.frame("casualtyPercentage"=round(ship.table/sum(ship.table)*100,2))
head(ship.freq,10)
world.fleet<-read.table("../worldfleet2005.txt", sep=";",stringsAsFactors=F, header=T,colClasses=
c("character","numeric","NULL"))
world.fleet$percentage<-round(world.fleet$Total/sum(world.fleet$Total)*100,2)
world.fleet[order(world.fleet$percentage, decreasing=T),c(1,3)]
head(sort(table(casualty$category[casualty$shipType=="GENERAL CARGO SHIP"]), decreasing=T),3)
head(sort(table(casualty$casType[casualty$shipType=="GENERAL CARGO SHIP"]), decreasing=T),3)
head(sort(table(casualty$category[casualty$shipType=="TUG"]), decreasing=T),3)
head(sort(table(casualty$casType[casualty$shipType=="TUG"]), decreasing=T),3)
table(casualty$casLife[casualty$shipType=="TUG"])`
head(sort(table(casualty$category[casualty$shipType=="RO-RO CARGO SHIP"]), decreasing=T),3)
head(sort(table(casualty$casType[casualty$shipType=="RO-RO CARGO SHIP"]), decreasing=T),3)
table(casualty$casLife[casualty$shipType=="RO-RO CARGO SHIP"])`
casualty[which.max(casualty$fatalities),2:12]
library(rCharts)
open_notebook()
conflicts()
head(sort(table(casualty$category[casualty$shipType=="GENERAL CARGO SHIP"]), decreasing=T),3)
casualty[which.max(casualty$fatalities),2:12]
str(casualty$fatalities)
hair_eye = as.data.frame(HairEyeColor)
rPlot(Freq ~ Hair | Eye, color = 'Eye', data = hair_eye, type = 'bar')
rPlot(category ~ casLife | casType, color = 'category', data = casualty, type = 'bar')
rPlot(category ~ casLife, color = 'category', data = casualty, type = 'bar')
str(hair_eye)
xtabs(casualty$flagSate)
casfact<-as.data.frame(lapply(casualty[,c(2,4,9,10,12)],function(x) as.factor(x))) #marche
casfact<-cbind(casfact,
"month"=as.numeric(month(casualty$date)), "year"=year(casualty$date),"DOB"=casualty$DOB)
str(casfact)
rPlot(category ~ casLife, color = 'category', data = casfact, type = 'bar')
rPlot(Freq ~ Hair | Eye, color = 'Eye', data = hair_eye, type = 'bar')
rPlot(category ~ casLife, data = casfact, type = 'bar')
rPlot(casLife ~ category, data = casfact, type = 'bar')
rPlot(casLife ~ category, data = casfact, type = 'point')
rPlot(casLife ~ category, data = casfact, type = 'point', color=casType)
rPlot(casLife ~ category, color=casType, data = casfact, type = 'point')
rPlot(casLife ~ category, color='casType', data = casfact, type = 'point')
head(hair_eye)
melt(airquality, id=c("month", "day"))
names(airquality) <- tolower(names(airquality))
melt(airquality, id=c("month", "day"))
dfrchart<-casfact[,c("casLife","casType","category")]
head(hair_eye)
dfmelt<-melt(dfrchart,id=c("casType","category"))
head(dfmelt)
head(airquLITY)
head(airquality)
aqm <- melt(airquality, id=c("month", "day"), na.rm=TRUE)
acast(aqm, day ~ month ~ variable)
rm(aqm)
head(dfmelt)
head(hair_eye)
rPlot(value ~ category, color='casType', data = dfmelt, type = 'point')
rPlot(value ~ casType, color='category', data = dfmelt, type = 'point')
rPlot(casLife ~ casType, color='category', data = casfact, type = 'point')
rPlot(casLife ~ casType, color='category', data = casfact, type = 'point')
df2<-casfact%.%group_by(casType,category,casLife)%.%summarize(count=n())
head(df2)
rPlot(count ~ casType | casLife, color='category', data = casfact, type = 'bar')
rPlot(count ~ casType | casLife, color='category', data = df2, type = 'bar')
nPlot(count ~ casType , group='casLife',color='category', data = df2, type = 'multiBarChart')
nPlot(count ~ casType , group='casLife', data = df2, type = 'multiBarChart')
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male,
type = 'multiBarChart')
n1
nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male,
type = 'multiBarChart')
nPlot(count ~ casType , group='casLife', data = df2, type = 'multiBarChart')
aa<-casualty[casualty$shipType=="GENERAL CARGO SHIP"]%.%group_by(category)%.%summarise(count=n())
aa<-casualty[casualty$shipType=="GENERAL CARGO SHIP",]%.%group_by(category)%.%summarise(count=n())
aa
head(sort(aa,decreasing=T),3)
aa<-casualty[casualty$shipType=="GENERAL CARGO SHIP",]%.%group_by(category)%.%summarise(count=n())%.%order_by(count)
aa<-casualty[casualty$shipType=="GENERAL CARGO SHIP",]%.%group_by(category)%.%summarise(count=n())%.%mutate(order_by(count))
xtabs(~category,data=casualty[casualty$shipType=="GENERAL CARGO SHIP",])
head(sort(xtabs(~category,data=casualty[casualty$shipType=="GENERAL CARGO SHIP",], decreasing=T,3)
)
)
head(sort(xtabs(~category,data=casualty[casualty$shipType=="GENERAL CARGO SHIP",]), decreasing=T),3)
aa<-casualty[casualty$shipType=="GENERAL CARGO SHIP",]%.%group_by(category)%.%summarise(count=n())%.%arrange(count)
aa
aa<-casualty[casualty$shipType=="GENERAL CARGO SHIP",]%.%group_by(category)%.%summarise(
count=n())%.%arrange(count(desc))
aa<-casualty[casualty$shipType=="GENERAL CARGO SHIP",]%.%group_by(category)%.%summarise(
count=n())%.%arrange(desc(count))
head(aa,3)
head(sort(xtabs(~category,data=casualty[casualty$shipType=="GENERAL CARGO SHIP",]), decreasing=T),3)
head(sort(xtabs(~casType,data=casualty[casualty$shipType=="GENERAL CARGO SHIP",]), decreasing=T),3)
head(casualty[casualty$shipType=="GENERAL CARGO SHIP",]%.%group_by(category)%.%summarise(
count=n())%.%arrange(desc(count)),3)
head(casualty[casualty$shipType=="GENERAL CARGO SHIP",]%.%group_by(consequence=casType)%.%summarise(
count=n())%.%arrange(desc(count)),3)
head(casualty[casualty$shipType=="GENERAL CARGO SHIP",]%.%group_by("consequence"=casType)%.%summarise(
count=n())%.%arrange(desc(count)),3)
casualty[casualty$fatalities>0
&!is.na(casualty$fatalities),]%.%group_by("year"=year(date)
)%.%summarise(nb=n(),nbFatlities=sum(fatalities))
head(casualty[casualty$shipType=="GENERAL CARGO SHIP",]%.%group_by(consequence=casType)%.%summarise(
count=n())%.%arrange(desc(count)),3)
casualty[casualty$shipType=="TUG",]%.%group_by(casLife)%.%summarise(
count=n())
table(casualty$casLife[casualty$shipType=="TUG"])
casualty[casualty$shipType=="RO-RO CARGO SHIP",]%.%group_by(casLife)%.%summarise(
count=n())
casualty[-casualty$shipType=="RO-RO CARGO SHIP",]%.%group_by(casLife)%.%summarise(
count=n())
casualty[casualty$shipType!="RO-RO CARGO SHIP",]%.%group_by(casLife)%.%summarise(
count=n())
casualty[casualty$shipType!="GENERAL CARGO SHIP",]%.%group_by(casLife)%.%summarise(
count=n())
head(casualty[casualty$shipType!="GENERAL CARGO SHIP",]%.%group_by(category)%.%summarise(
count=n())%.%arrange(desc(count)),3)
head(casualty[casualty$shipType=="GENERAL CARGO SHIP",]%.%group_by(category)%.%summarise(
count=n())%.%arrange(desc(count)),3)
head(casualty[casualty$shipType=="GENERAL CARGO SHIP",]%.%group_by(category)%.%summarise(
count=n())%.%arrange(desc(count)),5)
head(casualty[casualty$shipType=="GENERAL CARGO SHIP",]%.%group_by(category)%.%summarise(
count=n())%.%arrange(desc(count)),5)
head(casualty[casualty$shipType!="GENERAL CARGO SHIP",]%.%group_by(category)%.%summarise(
count=n())%.%arrange(desc(count)),5)
head(casualty[casualty$shipType!="GENERAL CARGO SHIP",]%.%group_by(casType)%.%summarise(
count=n())%.%arrange(desc(count)),5)
head(casualty[casualty$shipType=="GENERAL CARGO SHIP",]%.%group_by(casType)%.%summarise(
count=n())%.%arrange(desc(count)),5)
summary(casualty$DOB[casualty$DOB>=1800 & casualty$DOB<2010 $ casualty$shipType=="GENERAL CARGO SHIPS"])
summary(casualty$DOB[casualty$DOB>=1800 & casualty$DOB<2010 & casualty$shipType=="GENERAL CARGO SHIPS"])
summary(casualty$DOB[casualty$DOB>=1800 & casualty$DOB<2010 & casualty$shipType=="GENERAL CARGO SHIP"])
summary(casualty$DOB[casualty$DOB>=1800 & casualty$DOB<2010 & casualty$shipType!="GENERAL CARGO SHIP"])
mean(casualty$DOB[casualty$DOB>=1800 & casualty$DOB<2010 & casualty$shipType=="GENERAL CARGO SHIP"], na.rm=T)
mean(casualty$DOB[casualty$DOB>=1800 & casualty$DOB<2010 & casualty$shipType!="GENERAL CARGO SHIP"], na.rm=T)
round(mean(casualty$DOB[casualty$DOB>=1800 & casualty$DOB<2010 &
casualty$shipType=="GENERAL CARGO SHIP"], na.rm=T))
round(mean(casualty$DOB[casualty$DOB>=1800 & casualty$DOB<2010 &
casualty$shipType!="GENERAL CARGO SHIP"], na.rm=T))
